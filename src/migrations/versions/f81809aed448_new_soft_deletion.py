"""new soft deletion

Revision ID: f81809aed448
Revises: 15da45568e23
Create Date: 2022-07-17 20:03:45.291325

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f81809aed448'
down_revision = '15da45568e23'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('associate_email', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('associate_email_user_id_fkey', 'associate_email', type_='foreignkey')
    op.create_foreign_key(None, 'associate_email', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('booking', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('booking_item_id_fkey', 'booking', type_='foreignkey')
    op.drop_constraint('booking_location_id_fkey', 'booking', type_='foreignkey')
    op.drop_constraint('booking_user_id_fkey', 'booking', type_='foreignkey')
    op.create_foreign_key(None, 'booking', 'item', ['item_id'], ['id'], ondelete="SET NULL")
    op.create_foreign_key(None, 'booking', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'booking', 'location', ['location_id'], ['id'], ondelete='SET NULL')
    op.add_column('booking_status', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('booking_widget_user_id_fkey', 'booking_widget', type_='foreignkey')
    op.create_foreign_key(None, 'booking_widget', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('cart', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.add_column('company', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('company_user_id_fkey', 'company', type_='foreignkey')
    op.create_foreign_key(None, 'company', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('day_picker', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('day_picker_item_type_id_fkey', 'day_picker', type_='foreignkey')
    op.drop_constraint('day_picker_user_id_fkey', 'day_picker', type_='foreignkey')
    op.create_foreign_key(None, 'day_picker', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'day_picker', 'item_type', ['item_type_id'], ['id'], ondelete='SET NULL')
    op.add_column('email_text', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('email_text_user_id_fkey', 'email_text', type_='foreignkey')
    op.create_foreign_key(None, 'email_text', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('front_end_configs', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('front_end_configs_user_id_fkey', 'front_end_configs', type_='foreignkey')
    op.create_foreign_key(None, 'front_end_configs', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('item', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('item_item_type_id_fkey', 'item', type_='foreignkey')
    op.drop_constraint('item_item_subtype_id_fkey', 'item', type_='foreignkey')
    op.drop_constraint('item_user_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'item_subtype', ['item_subtype_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'item', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'item', 'item_type', ['item_type_id'], ['id'], ondelete='SET NULL')
    op.add_column('item_status', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.add_column('item_subtype', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('item_subtype_item_type_id_fkey', 'item_subtype', type_='foreignkey')
    op.drop_constraint('item_subtype_company_id_fkey', 'item_subtype', type_='foreignkey')
    op.drop_constraint('item_subtype_user_id_fkey', 'item_subtype', type_='foreignkey')
    op.create_foreign_key(None, 'item_subtype', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'item_subtype', 'company', ['company_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'item_subtype', 'item_type', ['item_type_id'], ['id'], ondelete='SET NULL')
    op.add_column('item_type', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('item_type_user_id_fkey', 'item_type', type_='foreignkey')
    op.create_foreign_key(None, 'item_type', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('item_type_text', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('item_type_text_item_type_id_fkey', 'item_type_text', type_='foreignkey')
    op.create_foreign_key(None, 'item_type_text', 'item_type', ['item_type_id'], ['id'], ondelete='SET NULL')
    op.add_column('language', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('language_user_id_fkey', 'language', type_='foreignkey')
    op.create_foreign_key(None, 'language', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('location', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('location_user_id_fkey', 'location', type_='foreignkey')
    op.create_foreign_key(None, 'location', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('order', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('order_user_id_fkey', 'order', type_='foreignkey')
    op.create_foreign_key(None, 'order', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('order_backup', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('order_backup_cart_id_fkey', 'order_backup', type_='foreignkey')
    op.create_foreign_key(None, 'order_backup', 'cart', ['cart_id'], ['id'], ondelete='SET NULL')
    op.add_column('order_status', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.add_column('payment_method', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('payment_method_user_id_fkey', 'payment_method', type_='foreignkey')
    op.create_foreign_key(None, 'payment_method', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('restricted_dates_item_type_id_fkey', 'restricted_dates', type_='foreignkey')
    op.create_foreign_key(None, 'restricted_dates', 'item_type', ['item_type_id'], ['id'], ondelete='SET NULL')
    op.add_column('season', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('season_user_id_fkey', 'season', type_='foreignkey')
    op.create_foreign_key(None, 'season', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('tag', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('tag_user_id_fkey', 'tag', type_='foreignkey')
    op.create_foreign_key(None, 'tag', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('tax_user_id_fkey', 'tax', type_='foreignkey')
    op.create_foreign_key(None, 'tax', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.add_column('time_picker', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('time_picker_user_id_fkey', 'time_picker', type_='foreignkey')
    op.drop_constraint('time_picker_day_picker_id_fkey', 'time_picker', type_='foreignkey')
    op.create_foreign_key(None, 'time_picker', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'time_picker', 'day_picker', ['day_picker_id'], ['id'], ondelete='SET NULL')
    op.add_column('voucher', sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False))
    op.drop_constraint('voucher_user_id_fkey', 'voucher', type_='foreignkey')
    op.create_foreign_key(None, 'voucher', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'voucher', type_='foreignkey')
    op.create_foreign_key('voucher_user_id_fkey', 'voucher', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('voucher', 'is_deleted')
    op.drop_constraint(None, 'time_picker', type_='foreignkey')
    op.drop_constraint(None, 'time_picker', type_='foreignkey')
    op.create_foreign_key('time_picker_day_picker_id_fkey', 'time_picker', 'day_picker', ['day_picker_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('time_picker_user_id_fkey', 'time_picker', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('time_picker', 'is_deleted')
    op.drop_constraint(None, 'tax', type_='foreignkey')
    op.create_foreign_key('tax_user_id_fkey', 'tax', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'tag', type_='foreignkey')
    op.create_foreign_key('tag_user_id_fkey', 'tag', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('tag', 'is_deleted')
    op.drop_constraint(None, 'season', type_='foreignkey')
    op.create_foreign_key('season_user_id_fkey', 'season', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('season', 'is_deleted')
    op.drop_constraint(None, 'restricted_dates', type_='foreignkey')
    op.create_foreign_key('restricted_dates_item_type_id_fkey', 'restricted_dates', 'item_type', ['item_type_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'payment_method', type_='foreignkey')
    op.create_foreign_key('payment_method_user_id_fkey', 'payment_method', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('payment_method', 'is_deleted')
    op.drop_column('order_status', 'is_deleted')
    op.drop_constraint(None, 'order_backup', type_='foreignkey')
    op.create_foreign_key('order_backup_cart_id_fkey', 'order_backup', 'cart', ['cart_id'], ['id'], ondelete='CASCADE')
    op.drop_column('order_backup', 'is_deleted')
    op.drop_constraint(None, 'order', type_='foreignkey')
    op.create_foreign_key('order_user_id_fkey', 'order', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('order', 'is_deleted')
    op.drop_constraint(None, 'location', type_='foreignkey')
    op.create_foreign_key('location_user_id_fkey', 'location', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('location', 'is_deleted')
    op.drop_constraint(None, 'language', type_='foreignkey')
    op.create_foreign_key('language_user_id_fkey', 'language', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('language', 'is_deleted')
    op.drop_constraint(None, 'item_type_text', type_='foreignkey')
    op.create_foreign_key('item_type_text_item_type_id_fkey', 'item_type_text', 'item_type', ['item_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('item_type_text', 'is_deleted')
    op.drop_constraint(None, 'item_type', type_='foreignkey')
    op.create_foreign_key('item_type_user_id_fkey', 'item_type', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('item_type', 'is_deleted')
    op.drop_constraint(None, 'item_subtype', type_='foreignkey')
    op.drop_constraint(None, 'item_subtype', type_='foreignkey')
    op.drop_constraint(None, 'item_subtype', type_='foreignkey')
    op.create_foreign_key('item_subtype_user_id_fkey', 'item_subtype', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('item_subtype_company_id_fkey', 'item_subtype', 'company', ['company_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('item_subtype_item_type_id_fkey', 'item_subtype', 'item_type', ['item_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('item_subtype', 'is_deleted')
    op.drop_column('item_status', 'is_deleted')
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_user_id_fkey', 'item', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('item_item_subtype_id_fkey', 'item', 'item_subtype', ['item_subtype_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('item_item_type_id_fkey', 'item', 'item_type', ['item_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('item', 'is_deleted')
    op.drop_constraint(None, 'front_end_configs', type_='foreignkey')
    op.create_foreign_key('front_end_configs_user_id_fkey', 'front_end_configs', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('front_end_configs', 'is_deleted')
    op.drop_constraint(None, 'email_text', type_='foreignkey')
    op.create_foreign_key('email_text_user_id_fkey', 'email_text', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('email_text', 'is_deleted')
    op.drop_constraint(None, 'day_picker', type_='foreignkey')
    op.drop_constraint(None, 'day_picker', type_='foreignkey')
    op.create_foreign_key('day_picker_user_id_fkey', 'day_picker', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('day_picker_item_type_id_fkey', 'day_picker', 'item_type', ['item_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('day_picker', 'is_deleted')
    op.drop_constraint(None, 'company', type_='foreignkey')
    op.create_foreign_key('company_user_id_fkey', 'company', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('company', 'is_deleted')
    op.drop_column('cart', 'is_deleted')
    op.drop_constraint(None, 'booking_widget', type_='foreignkey')
    op.create_foreign_key('booking_widget_user_id_fkey', 'booking_widget', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('booking_status', 'is_deleted')
    op.drop_constraint(None, 'booking', type_='foreignkey')
    op.drop_constraint(None, 'booking', type_='foreignkey')
    op.drop_constraint(None, 'booking', type_='foreignkey')
    op.create_foreign_key('booking_user_id_fkey', 'booking', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('booking_location_id_fkey', 'booking', 'location', ['location_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('booking_item_id_fkey', 'booking', 'item', ['item_id'], ['id'], ondelete='CASCADE')
    op.drop_column('booking', 'is_deleted')
    op.drop_constraint(None, 'associate_email', type_='foreignkey')
    op.create_foreign_key('associate_email_user_id_fkey', 'associate_email', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('associate_email', 'is_deleted')
    # ### end Alembic commands ###
